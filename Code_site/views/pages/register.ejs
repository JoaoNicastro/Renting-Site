<%- include('../partials/head'); %>
<%- include('../partials/menu'); %>

<!-- Get Started Button triggers the modal -->
<button id="myBtn" class="btn btn-primary btn-lg">Get Started</button>

<!-- The Modal -->
<div id="myModal" class="modal">
  <!-- Modal content -->
  <div class="modal-content">
    <span id="closeModal" class="close">&times;</span>
    <div class="modal-header">
    <h4>Step 1/4</h4>
  </div>
  <div class="modal-left">
    <h4>ðŸ”¥ With this search profile you can expect ... matches per week</h4>
    <input type="text" id="citySearch" placeholder="Search city" />
  </div>
  <div class="modal-right" style="display: flex; align-items: center; justify-content: center; height: 100%; padding-right: 20px;">
    <div id="map" style="height: 449px; width: 442.35px;"></div>
  </div>
  <div class="modal-footer" style="text-align: center;">
    <button id="nextButton" class="btn btn-primary" style="width: 901px; height: 49.33px;">Next</button>
  </div>  
 


<%- include('../partials/footer'); %>

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // Set your Mapbox access token
  mapboxgl.accessToken = 'pk.eyJ1IjoidW5pc3RheXMiLCJhIjoiY2x0cXNub3VtMDdvdDJpcnoxc2Npc2s5YSJ9.agPsL_8WDUTq8PDqpPZqbQ';

  // Get the modal element
  var modal = document.getElementById('myModal');
  // Get the button that opens the modal
  var btn = document.getElementById('myBtn');
  // Get the <span> element that closes the modal
  var span = document.getElementById('closeModal');
  // Get the map element
  var mapElement = document.getElementById('map');
  // Store the map object
  var map = null;

  // Function to initialize the map
  function initializeMap() {
    map = new mapboxgl.Map({
      container: 'map', // container id
      style: 'mapbox://styles/mapbox/streets-v11', // style URL
      center: [4.899, 52.372], // starting position [lng, lat]
      zoom: 9 // starting zoom
    });
  }

  // When the user clicks the button, open the modal
  btn.onclick = function() {
    modal.style.display = "flex";
    // Initialize the map only if it hasn't been initialized yet
    if (!map) {
      initializeMap();
    }
  };

  // When the user clicks on <span> (x), close the modal
  span.onclick = function() {
    modal.style.display = "none";
  };

  // When the user clicks anywhere outside of the modal content, close it
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };
  
  $(document).ready(function() {
  $('#nextButton').on('click', function() {
    // Trigger the animation
    $(this).animate({
      opacity: 0.5,
    }, 500, function() {
      // After the animation, load the new popup content
      $('#yourPopupContainer').load('/path-to-new-popup');
    });

    // Use AJAX to send data to the server to save in the database
    $.ajax({
      type: 'POST',
      url: '/save-data-endpoint',
      data: {
        // Data to be sent to the server for saving
        // You need to collect this data from your form or wherever it is available
      },
      success: function(response) {
        console.log('Data saved successfully');
      },
      error: function(error) {
        console.log('Error saving data', error);
      }
    });
  });
});

var currentStep = 1;

$(document).ready(function() {
  $('#nextButton').on('click', function() {
    // Increment the step
    currentStep++;

    // Check if we need to update the step in the modal
    if (currentStep <= 4) {
      // Update the modal header to the new step
      $('.modal-header h4').text(`Step ${currentStep}/4`);
      // You can also add conditional content changes for each step here
      switch(currentStep) {
        case 2:
          // Update the modal content for step 2
          break;
        // Add cases for further steps if different content is needed
      }
    } else {
      // Reset or close the modal if the steps are completed
      currentStep = 1; // Reset to start or implement closing functionality
      modal.style.display = "none"; // Example of closing the modal
    }

    // Prevent the default action to stay on the current popup
    event.preventDefault();
  });
});

</script>

<style>
  .modal {
    display: none;
    position: fixed;
    z-index: 2;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 40px;
  }

  .modal-content {
    display: flex;
    flex-direction: row;
    background-color: #fefefe;
    width: 949px;
    height: 652.23px;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    overflow: hidden;
  }
  .modal-left {
    width: 50%; /* Maintain the width for the left part of the modal */
    display: flex;
    flex-direction: column;
    justify-content: center; /* This will vertically center your search bar */
    align-items: center; /* This will horizontally center your search bar in the .modal-left container */
    padding: 20px; /* Adjust padding as needed */
  }

  #searchCityInput {
    width: 426.65px; /* Exact width for the search bar */
    height: 55.33px; /* Exact height for the search bar */
    padding: 10px; /* Adjust padding to ensure text is vertically centered */
    margin-bottom: 10px; /* Space below the search input */
    border: 1px solid #ccc; /* A subtle border */
    font-size: 16px; /* Sufficiently large font size for legibility */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
  }
  .modal-left, .modal-right {
    width: 50%;
  }

  #map {
    width: 100%;
    /* Adjust the height if necessary to work with your layout */
  }

  .modal-header, .modal-footer {
    padding: 20px;
  }

  .close {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
  }

  .modal-footer {
    position: absolute;
    right: 10px;
    bottom: 10px;
  }

  #nextButton {
    border: none; 
    padding: 10px 20px;
  }
</style>

